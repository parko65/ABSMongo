@page "/"
@using Service.Contracts
@using Shared.DataTransferObjects

<h2>Demo</h2>

<FluentDataGrid Items="_recipes" ShowHover="true">
    <PropertyColumn Property="@(r => r.Name)" Title="Name" />
    <PropertyColumn Property="@(r => r.Description)" Title="Description" />
</FluentDataGrid>

<FluentTextField @bind-Value=recipeForCreation.Name Placeholder="Name"></FluentTextField>
<FluentTextField @bind-Value=recipeForCreation.Description Placeholder="Description"></FluentTextField>

<FluentButton OnClick="CreateRecipe">Create Recipe</FluentButton>

<FluentNumberField @bind-Value=_materialForCreation.MaterialNumber Placeholder="Material Number"></FluentNumberField>
<FluentTextField @bind-Value=_materialForCreation.Name Placeholder="Material Name"></FluentTextField>

<FluentButton OnClick="AddMaterialsToRecipe">Add Material</FluentButton>

@code {
    [Inject]
    public IServiceManager Service { get; set; } = default!;

    private IQueryable<RecipeDto>? _recipes;

    private MaterialForCreationDto _materialForCreation = new();

    private MaterialForCreationDto[] _materialsForCreation = [];

    private RecipeForCreationDto recipeForCreation = new();

    protected override async Task OnInitializedAsync()
    {
        await LoadRecipesAsync();
    }

    private async Task CreateRecipe()
    {
        // Add the materials to the recipe for creation
        recipeForCreation.Materials = _materialsForCreation;
        await Service.RecipeService.CreateRecipeAsync(recipeForCreation);        
        await LoadRecipesAsync(); // Reload recipes to reflect the new one
        ClearData();
    }

    private void AddMaterialsToRecipe()
    {
        //Add the material the materials collection
        _materialsForCreation = _materialsForCreation.Append(_materialForCreation).ToArray();
        _materialForCreation = new MaterialForCreationDto(); // Reset after adding
    }

    private async Task LoadRecipesAsync()
    {
        var recipes = await Service.RecipeService.GetRecipesAsync();

        _recipes = recipes.AsQueryable();
    }

    private void ClearData()
    {        
        _materialForCreation = new MaterialForCreationDto();
        _materialsForCreation = [];
        recipeForCreation = new RecipeForCreationDto();
    }
}
